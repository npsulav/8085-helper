/// Generated by Flutter GetX Starter on 2022-04-03 18:58
import 'dart:convert';

import 'package:a_8085_helper/api/api_calls.dart';
import 'package:a_8085_helper/webview/webview_fp.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:url_launcher/url_launcher.dart';

import 'landing_screen_logic.dart';

class LandingScreenView extends StatefulWidget {

  LandingScreenView({Key? key}) : super(key: key);

  @override
  State<LandingScreenView> createState() => _LandingScreenViewState();
}

class _LandingScreenViewState extends State<LandingScreenView> {
  final LandingScreenLogic logic = Get.put(LandingScreenLogic());


  @override
  void initState() {
    super.initState();
  }
  @override
  Widget build(BuildContext context) {
    return SingleChildScrollView(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
        Container(
        width: context.width,
        margin: const EdgeInsets.all(10),
        padding: const EdgeInsets.all(10),
        decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(10),
            image: DecorationImage(
              fit: BoxFit.cover,
              colorFilter:
              ColorFilter.mode(Colors.black.withAlpha(50), BlendMode.dstATop),
              image: const AssetImage("assets/bg.jpg"),
            )),
        child: Column(
          children: const [
            Text("Code of the day",
              style: TextStyle(fontWeight: FontWeight.w600, fontSize: 17),),
            Text("mov a,b",
              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 23),),
            Divider(color: Colors.black,),
            Padding(
              padding: EdgeInsets.all(8.0),
              child: Text("It is used to move the content"
                  " of b register to accumulator. This code is 1 byte code.",
                textAlign: TextAlign.center,
                style: TextStyle(
                    color: Colors.black, fontWeight: FontWeight.w600),),
            ),
          ],
        ),
      ),

      Container(
        padding: const EdgeInsets.only(left: 15),
        child: const Text("Resources",
          style: TextStyle(fontSize: 17, fontWeight: FontWeight.w600),),
      ),

      Padding(
        padding: const EdgeInsets.only(left: 15.0,right: 15),
        child: FutureBuilder<Response>(
          future: ApiCalls().getVideos(),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.done) {
              if(snapshot.hasData) {

                String itemsString = snapshot.data!.bodyString!;
                var itemData = jsonDecode(itemsString);
                List item = itemData["data"];

                return GridView.builder(
                    physics: const NeverScrollableScrollPhysics(),
                    shrinkWrap: true,
                    gridDelegate: const SliverGridDelegateWithMaxCrossAxisExtent(
                        maxCrossAxisExtent: 250,
                        childAspectRatio: 3 / 2.5,
                        crossAxisSpacing: 20,
                        mainAxisSpacing: 20),
                    itemCount: item.length,
                    padding: const EdgeInsets.only(top: 20),
                    itemBuilder: (BuildContext ctx, index) {
                      return InkWell(
                        onTap: () {
                          if(item.elementAt(index)["title"].toString().startsWith("BLOG")) {
                            Get.to(FullPageWebView(
                                urlData: item.elementAt(index)["url"]));
                            }
                          else {
                            launch(item.elementAt(index)["url"]);
                          }
                        },
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Expanded(
                              child: Container(
                                alignment: Alignment.center,

                                decoration: BoxDecoration(
                                    color: Colors.black.withOpacity(0.4),
                                    image:  DecorationImage(
                                        fit: BoxFit.cover,
                                        image: NetworkImage(
                                            item.elementAt(index)["image"])),
                                    borderRadius: BorderRadius.circular(15)),
                              ),
                            ),
                            Padding(
                              padding: const EdgeInsets.only(top: 18.0),
                              child: Text(item.elementAt(index)["title"],
                                style: const TextStyle(fontWeight: FontWeight
                                    .bold),),
                            )
                          ],
                        ),
                      );
                    });
              }
              else if(snapshot.hasError){
                return const Text("Error occurred");
              }
              else {
                return const Text("No resources found");
              }
            }
            return const Center(
              child: CircularProgressIndicator(),
            );
          }
        ),
      )

      ],
    ),);
  }
}