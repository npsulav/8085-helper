/// Generated by Flutter GetX Starter on 2022-04-03 19:34
import 'package:a_8085_helper/res/app_colors.dart';
import 'package:creamy_field/creamy_field.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';

import 'input_view_logic.dart';

class InputViewView extends StatefulWidget {
  const InputViewView({Key? key}) : super(key: key);

  @override
  State<InputViewView> createState() => _InputViewViewState();
}

class _InputViewViewState extends State<InputViewView> {
  final InputViewLogic logic = Get.put(InputViewLogic());

  late CreamyEditingController controller;

  late ScrollController scrollController;

  @override
  void initState() {
    super.initState();

    // The below example shows [CreamyEditingController], a text editing controller with RichText highlighting support
    controller = CreamyEditingController(
      // This is the CreamySyntaxHighlighter which will be used by the controller
      // to generate list of RichText for syntax highlighting
      syntaxHighlighter: CreamySyntaxHighlighter(
        language: LanguageType.x86asm,
        theme: HighlightedThemeType.githubTheme,
      ),
      // The number of spaces which will replace `\t`.
      // Setting this to 1 does nothing & setting this to value less than 1
      // throws assertion error.
      tabSize: 4,
    );
    scrollController = ScrollController();
  }

  @override
  void dispose() {
    controller.dispose();
    scrollController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    bool _isDark = Theme.of(context).brightness == Brightness.dark;
    return  LineCountIndicator(
        textControllerOfTextField: controller,
        scrollControllerOfTextField: scrollController,
        decoration: LineCountIndicatorDecoration(
          backgroundColor: Colors.grey,
          rightBorderSide: const BorderSide(
            color: AppColors.primary
          )
        ),
        // Allow this Text field to be horizontally scrollable
        child: HorizontalScrollable(
          // Additional options for text selection widget
          child: Padding(
            padding: const EdgeInsets.only(left: 8.0),
            child: TextField(
              autofocus: true,
              // Our controller should be up casted as CreamyEditingController
              // Note: Declare controller as CreamyEditingController if this fails.
              controller: controller,
              scrollController: scrollController,
              textCapitalization: TextCapitalization.none,
              decoration: const InputDecoration.collapsed(hintText: 'Write .asm codes here'),
              maxLines: null,
            ),
          ),
        ),
      );
  }
}